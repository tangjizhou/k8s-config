apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: base-env
  labels:
    app: redis
spec:
  replicas: 1
  template:
    metadata:
      name: redis
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: registry.cn-shanghai.aliyuncs.com/twisted-fate/redis-master:5.0.7
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /data
              name: redis-pv
      restartPolicy: Always
      volumes:
        - name: redis-pv
          persistentVolumeClaim:
            claimName: redis-pvc
  selector:
    matchLabels:
      app: redis
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: base-env
spec:
  selector:
    app: redis
  ports:
    - port: 6379
      protocol: "TCP"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: base-env
spec:
  storageClassName: redis
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 200Mi
---
# 提供的本地磁盘资源
apiVersion: v1
kind: PersistentVolume
metadata:
  name: redis-pv
  namespace: base-env
  labels:
    type: local
spec:
  capacity:
    storage: 200Mi
  #该volume只能被单个节点以读写的方式映射
  accessModes:
    - ReadWriteOnce
  # 标记，将用于PersistentVolumeClaim进行绑定
  storageClassName: redis
  # 本地磁盘路径
  hostPath:
    path: "/Users/tangjizhou/work/dev-tool/k8s/volume/redis"
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRouteTCP
metadata:
  name: redis
  namespace: base-env
spec:
  entryPoints:
    - redis
  routes:
    - match: HostSNI(`*`)
      kind: Rule
      services:
        - name: redis
          port: 6379